{
    "address": "0x89d756FCa5f69aC6Ae34e938815A7b987C063115",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeed",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "transactionHash": "0x440526d988c0e2c6fc2b3bea90256a5dc8c7787744ac9fe9ef216d2f98f63779",
    "receipt": {
        "to": null,
        "from": "0xBf14324a5501522Ed4d887a3c7c5abf0aa54b8e8",
        "contractAddress": "0x89d756FCa5f69aC6Ae34e938815A7b987C063115",
        "transactionIndex": 9,
        "gasUsed": "1001241",
        "logsBloom": "0x
        "blockHash": "0xf3172e4ca03121dd6ce1c4ada3671afafbdd0c70e7eaad15a19877011b8b2c34",
        "transactionHash": "0x440526d988c0e2c6fc2b3bea90256a5dc8c7787744ac9fe9ef216d2f98f63779",
        "logs": [],
        "blockNumber": 10987932,
        "cumulativeGasUsed": "2946772",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 2,
    "solcInputHash": "616eb39b6ddce9d3feaf80256b2fe5d9",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sakshi Shah\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.0;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConvertor.sol\\\";\\n\\n// 3. Interfaces, Libraries, Contracts\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Sakshi Shah\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConvertor for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events (we have none!)\\n\\n    // Modifiers\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// @notice Funds our contract based on the ETH/USD price\\n   function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // Transfer vs call vs Send\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders=s_funders;\\n        //mappings cannot be in memory!!\\n        for(uint256 funderIndex=0;funderIndex<funders.length;funderIndex++){\\n            address funder=funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n        }\\n        s_funders=new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x52a44ebba4df3bb05e240d35ac7e5e393f4658316c590258bf6ac15879b84bde\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nlibrary PriceConvertor{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n//ABI \\n//ADDRESS 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n\\n(,int256 price,,,)=priceFeed.latestRoundData();\\n//price of eth in terms of USD\\n//3000.00000000\\nreturn uint256(price * 10000000000);//1**10==10000000000\\n}\\nfunction getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint256){\\n    uint256 ethPrice=getPrice(priceFeed);\\n    uint ethAmountInUsd=(ethPrice*ethAmount)/1000000000000000000;\\n    return ethAmountInUsd;\\n}\\n\\n}\",\"keccak256\":\"0x22dc26221bd819ef2bafac55063729ede595133704778f96350fcfe09662f37e\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200124a3803806200124a833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110bd6200018d600039600081816101e4015281816103770152818161041d015281816105a8015261079e01526110bd6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a61565b610199565b6040516100b49190610aa7565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc61040c565b6040516100e99190610aa7565b60405180910390f35b3480156100fe57600080fd5b50610107610419565b6040516101149190610ad1565b60405180910390f35b34801561012957600080fd5b50610132610441565b60405161013f9190610b4b565b60405180910390f35b61015061046b565b005b61015a6105a6565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b92565b610834565b6040516101909190610ad1565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bbf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c1d565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c66565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610957565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103b990610cc6565b60006040518083038185875af1925050503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104aa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087b90919063ffffffff16565b10156104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290610d38565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053a9190610d58565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610664575b5050505050905060005b81518110156107395760008282815181106106d6576106d5610bbf565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073190610c1d565b9150506106b8565b50600067ffffffffffffffff81111561075557610754610c66565b5b6040519080825280602002602001820160405280156107835781602001602082028036833780820191505090505b5060009080519060200190610799929190610957565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e090610cc6565b60006040518083038185875af1925050503d806000811461081d576040519150601f19603f3d011682016040523d82523d6000602084013e610822565b606091505b505090508061083057600080fd5b5050565b600080828154811061084957610848610bbf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610887836108b7565b90506000670de0b6b3a764000085836108a09190610dae565b6108aa9190610e37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090057600080fd5b505afa158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190610ef5565b5050509150506402540be4008161094f9190610f70565b915050919050565b8280548282559060005260206000209081019282156109d0579160200282015b828111156109cf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610977565b5b5090506109dd91906109e1565b5090565b5b808211156109fa5760008160009055506001016109e2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2e82610a03565b9050919050565b610a3e81610a23565b8114610a4957600080fd5b50565b600081359050610a5b81610a35565b92915050565b600060208284031215610a7757610a766109fe565b5b6000610a8584828501610a4c565b91505092915050565b6000819050919050565b610aa181610a8e565b82525050565b6000602082019050610abc6000830184610a98565b92915050565b610acb81610a23565b82525050565b6000602082019050610ae66000830184610ac2565b92915050565b6000819050919050565b6000610b11610b0c610b0784610a03565b610aec565b610a03565b9050919050565b6000610b2382610af6565b9050919050565b6000610b3582610b18565b9050919050565b610b4581610b2a565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b610b6f81610a8e565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600060208284031215610ba857610ba76109fe565b5b6000610bb684828501610b7d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2882610a8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5b57610c5a610bee565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb0600083610c95565b9150610cbb82610ca0565b600082019050919050565b6000610cd182610ca3565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d22601b83610cdb565b9150610d2d82610cec565b602082019050919050565b60006020820190508181036000830152610d5181610d15565b9050919050565b6000610d6382610a8e565b9150610d6e83610a8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da357610da2610bee565b5b828201905092915050565b6000610db982610a8e565b9150610dc483610a8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dfd57610dfc610bee565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4282610a8e565b9150610e4d83610a8e565b925082610e5d57610e5c610e08565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8781610e68565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b6000819050919050565b610ebd81610eaa565b8114610ec857600080fd5b50565b600081519050610eda81610eb4565b92915050565b600081519050610eef81610b66565b92915050565b600080600080600060a08688031215610f1157610f106109fe565b5b6000610f1f88828901610e95565b9550506020610f3088828901610ecb565b9450506040610f4188828901610ee0565b9350506060610f5288828901610ee0565b9250506080610f6388828901610e95565b9150509295509295909350565b6000610f7b82610eaa565b9150610f8683610eaa565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fc557610fc4610bee565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561100257611001610bee565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103f5761103e610bee565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107c5761107b610bee565b5b82820290509291505056fea264697066735822122094dcfdb667edc566b8236a10862412c282d223160bc74978155ac3fd5b32390564736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a61565b610199565b6040516100b49190610aa7565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc61040c565b6040516100e99190610aa7565b60405180910390f35b3480156100fe57600080fd5b50610107610419565b6040516101149190610ad1565b60405180910390f35b34801561012957600080fd5b50610132610441565b60405161013f9190610b4b565b60405180910390f35b61015061046b565b005b61015a6105a6565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b92565b610834565b6040516101909190610ad1565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bbf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c1d565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c66565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610957565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103b990610cc6565b60006040518083038185875af1925050503d80600081146103f6576040519150601f19603f3d011682016040523d82523d6000602084013e6103fb565b606091505b505090508061040957600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104aa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087b90919063ffffffff16565b10156104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290610d38565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053a9190610d58565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610664575b5050505050905060005b81518110156107395760008282815181106106d6576106d5610bbf565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073190610c1d565b9150506106b8565b50600067ffffffffffffffff81111561075557610754610c66565b5b6040519080825280602002602001820160405280156107835781602001602082028036833780820191505090505b5060009080519060200190610799929190610957565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e090610cc6565b60006040518083038185875af1925050503d806000811461081d576040519150601f19603f3d011682016040523d82523d6000602084013e610822565b606091505b505090508061083057600080fd5b5050565b600080828154811061084957610848610bbf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610887836108b7565b90506000670de0b6b3a764000085836108a09190610dae565b6108aa9190610e37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090057600080fd5b505afa158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190610ef5565b5050509150506402540be4008161094f9190610f70565b915050919050565b8280548282559060005260206000209081019282156109d0579160200282015b828111156109cf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610977565b5b5090506109dd91906109e1565b5090565b5b808211156109fa5760008160009055506001016109e2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2e82610a03565b9050919050565b610a3e81610a23565b8114610a4957600080fd5b50565b600081359050610a5b81610a35565b92915050565b600060208284031215610a7757610a766109fe565b5b6000610a8584828501610a4c565b91505092915050565b6000819050919050565b610aa181610a8e565b82525050565b6000602082019050610abc6000830184610a98565b92915050565b610acb81610a23565b82525050565b6000602082019050610ae66000830184610ac2565b92915050565b6000819050919050565b6000610b11610b0c610b0784610a03565b610aec565b610a03565b9050919050565b6000610b2382610af6565b9050919050565b6000610b3582610b18565b9050919050565b610b4581610b2a565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b610b6f81610a8e565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600060208284031215610ba857610ba76109fe565b5b6000610bb684828501610b7d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2882610a8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5b57610c5a610bee565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb0600083610c95565b9150610cbb82610ca0565b600082019050919050565b6000610cd182610ca3565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d22601b83610cdb565b9150610d2d82610cec565b602082019050919050565b60006020820190508181036000830152610d5181610d15565b9050919050565b6000610d6382610a8e565b9150610d6e83610a8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da357610da2610bee565b5b828201905092915050565b6000610db982610a8e565b9150610dc483610a8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dfd57610dfc610bee565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4282610a8e565b9150610e4d83610a8e565b925082610e5d57610e5c610e08565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8781610e68565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b6000819050919050565b610ebd81610eaa565b8114610ec857600080fd5b50565b600081519050610eda81610eb4565b92915050565b600081519050610eef81610b66565b92915050565b600080600080600060a08688031215610f1157610f106109fe565b5b6000610f1f88828901610e95565b9550506020610f3088828901610ecb565b9450506040610f4188828901610ee0565b9350506060610f5288828901610ee0565b9250506080610f6388828901610e95565b9150509295509295909350565b6000610f7b82610eaa565b9150610f8683610eaa565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fc557610fc4610bee565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561100257611001610bee565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103f5761103e610bee565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107c5761107b610bee565b5b82820290509291505056fea264697066735822122094dcfdb667edc566b8236a10862412c282d223160bc74978155ac3fd5b32390564736f6c63430008080033",
    "devdoc": {
        "author": "Sakshi Shah",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A sample Funding Contract",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "Funds our contract based on the ETH/USD price"
            }
        },
        "notice": "This contract is for creating a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
